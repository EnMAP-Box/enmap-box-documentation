..
  ## AUTOGENERATED START TITLE

.. _Fit LogisticRegression:

Fit LogisticRegression
**********************


..
  ## AUTOGENERATED END TITLE

Here I can add manually defined title-related content.

..
  ## AUTOGENERATED START DESCRIPTION

Logistic <a href="https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-regression">Regression</a> (aka logit, MaxEnt) <a href="https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-classifier">classifier</a>.
In the multiclass case, the training algorithm uses the one-vs-rest (OvR) scheme if the 'multi_class' option is set to 'ovr', and uses the cross-entropy loss if the 'multi_class' option is set to 'multinomial'.

..
  ## AUTOGENERATED END DESCRIPTION

Here I can add manually defined description-related content.

..
  ## AUTOGENERATED START PARAMETERS


:guilabel:`Classifier` [string]
    Scikit-learn python code. See <a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html">LogisticRegression</a> for information on different parameters.
    Default::

        from sklearn.linear_model import LogisticRegression
        from sklearn.preprocessing import StandardScaler
        from sklearn.pipeline import make_pipeline
        logisticRegression = LogisticRegression()
        classifier = make_pipeline(StandardScaler(), logisticRegression)

:guilabel:`Training dataset` [file]
    <a href="https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-training-dataset">Training dataset</a> <a href="https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-pickle-file">pickle file</a> used for fitting the <a href="https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-classifier">classifier</a>. If not specified, an unfitted classifier is created.
**Outputs**


:guilabel:`Output classifier` [fileDestination]
    <a href="https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-pickle-file">Pickle file</a> destination.


..
  ## AUTOGENERATED END PARAMETERS

Here I can add manually defined parameters-related content.

..
  ## AUTOGENERATED START COMMAND USAGE

**Command-line usage**

``>qgis_process help enmapbox:FitLogisticregression``::

    ----------------
    Arguments
    ----------------
    
    classifier: Classifier
    	Default value:	from sklearn.linear_model import LogisticRegression
    from sklearn.preprocessing import StandardScaler
    from sklearn.pipeline import make_pipeline
    logisticRegression = LogisticRegression()
    classifier = make_pipeline(StandardScaler(), logisticRegression)
    	Argument type:	string
    	Acceptable values:
    		- String value
    		- field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field
    		- expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression
    dataset: Training dataset (optional)
    	Argument type:	file
    	Acceptable values:
    		- Path to a file
    outputClassifier: Output classifier
    	Argument type:	fileDestination
    	Acceptable values:
    		- Path for new file
    
    ----------------
    Outputs
    ----------------
    
    outputClassifier: <outputFile>
    	Output classifier
    
    

..
  ## AUTOGENERATED END COMMAND USAGE
