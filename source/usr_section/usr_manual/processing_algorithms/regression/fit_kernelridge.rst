
..
  ## AUTOGENERATED TITLE START

.. _enmapbox_FitKernelridge:

***************
Fit KernelRidge
***************

..
  ## AUTOGENERATED TITLE END


..
  ## AUTOGENERATED DESCRIPTION START

Kernel ridge `regression <https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-regression>`_.
Kernel ridge regression \(KRR\) combines ridge regression \(linear least squares with l2-norm regularization\) with the kernel trick. It thus learns a linear function in the space induced by the respective kernel and the data. For non-linear kernels, this corresponds to a non-linear function in the original space.
The form of the model learned by KRR is identical to support vector regression \(SVR\). However, different loss functions are used: KRR uses squared error loss while support vector regression uses epsilon-insensitive loss, both combined with l2 regularization. In contrast to SVR, fitting a KRR model can be done in closed-form and is typically faster for medium-sized `datasets <https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-dataset>`_. On the other hand, the learned model is non-sparse and thus slower than SVR, which learns a sparse model for epsilon \> 0, at prediction-time.


..
  ## AUTOGENERATED DESCRIPTION END


Usage:

1. Start the algorithm from the Processing Toolbox panel.

2. Select a training dataset or create one by clicking the processing algorithm icon, then click :guilabel:`run`.

    .. figure:: ../../processing_algorithms_includes/regression/img/kernel.png
       :align: center


..
  ## AUTOGENERATED PARAMETERS START

**Parameters**


:guilabel:`Regressor` [string]
    Scikit-learn python code. See `KernelRidge <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`_ for information on different parameters.
    Default::

        from sklearn.pipeline import make_pipeline
        from sklearn.model_selection import GridSearchCV
        from sklearn.preprocessing import StandardScaler
        from sklearn.kernel_ridge import KernelRidge
        
        krr = KernelRidge\(\)
        param_grid = {'kernel': \['rbf'\],
                      'gamma': \[0.001, 0.01, 0.1, 1, 10, 100, 1000\],
                      'alpha': \[0.001, 0.01, 0.1, 1, 10, 100, 1000\]}
        tunedKRR = GridSearchCV\(cv=3, estimator=krr, scoring='neg_mean_absolute_error', param_grid=param_grid\)
        regressor = make_pipeline\(StandardScaler\(\), tunedKRR\)

:guilabel:`Training dataset` [file]
    `Training dataset <https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-training-dataset>`_ `pickle file <https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-pickle-file>`_ used for fitting the `classifier <https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-classifier>`_. If not specified, an unfitted classifier is created.


**Outputs**


:guilabel:`Output regressor` [fileDestination]
    `Pickle file <https://enmap-box.readthedocs.io/en/latest/general/glossary.html#term-pickle-file>`_ destination.

..
  ## AUTOGENERATED PARAMETERS END

..
  ## AUTOGENERATED COMMAND USAGE START

**Command-line usage**

``>qgis_process help enmapbox:FitKernelridge``::

    ----------------
    Arguments
    ----------------
    
    regressor: Regressor
    	Default value:	from sklearn.pipeline import make_pipeline
    from sklearn.model_selection import GridSearchCV
    from sklearn.preprocessing import StandardScaler
    from sklearn.kernel_ridge import KernelRidge
    
    krr = KernelRidge()
    param_grid = {'kernel': ['rbf'],
                  'gamma': [0.001, 0.01, 0.1, 1, 10, 100, 1000],
                  'alpha': [0.001, 0.01, 0.1, 1, 10, 100, 1000]}
    tunedKRR = GridSearchCV(cv=3, estimator=krr, scoring='neg_mean_absolute_error', param_grid=param_grid)
    regressor = make_pipeline(StandardScaler(), tunedKRR)
    	Argument type:	string
    	Acceptable values:
    		- String value
    		- field:FIELD_NAME to use a data defined value taken from the FIELD_NAME field
    		- expression:SOME EXPRESSION to use a data defined value calculated using a custom QGIS expression
    dataset: Training dataset (optional)
    	Argument type:	file
    	Acceptable values:
    		- Path to a file
    outputRegressor: Output regressor
    	Argument type:	fileDestination
    	Acceptable values:
    		- Path for new file
    
    ----------------
    Outputs
    ----------------
    
    outputRegressor: <outputFile>
    	Output regressor
    
    


..
  ## AUTOGENERATED COMMAND USAGE END
